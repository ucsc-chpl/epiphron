#version 440
#define LOCAL_MEM_SIZE 1024
#define BIN_TYPE uint

layout(std430, binding = 0) buffer buf0 { uint data[]; };
layout(std430, binding = 1) buffer buf1 { BIN_TYPE bins[]; };
layout(std430, binding = 2) buffer buf2 {
    uint len;
    uint num_bins;
};
shared BIN_TYPE local_bins[LOCAL_MEM_SIZE];

void main() {
    uint index = gl_GlobalInvocationID.x;

    // Compute local histograms in shared memory
    if (index > len)
        return;
    uint bin = data[index] % num_bins;
    atomicAdd(local_bins[bin], 1);

    barrier();

    // Update global histogram with single thread
    if (gl_LocalInvocationID.x == 0) {
        for (uint i = 0; i < num_bins; i++) {
            atomicAdd(bins[i], local_bins[i]);
        }
    }
}